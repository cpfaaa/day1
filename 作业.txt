JDK：Java 开发工具包，提供了 Java 的开发环境和 运行环境。
 JRE：Java 运行环境，为 Java 的运行提供了所 需环境。
JDK 其实包含了 JRE，同时还包含了编译 Java 源码的编译器 Javac
还包含 了很多 Java 程序调试和 分析的工具 如果你需要运行 Java 程序
只需安装 JRE 就可以了，如果你需 要编写 Java 程序，需要安装 JDK。

为了能够将这些基本数据类型当成对象操作，
 Java 为每一个基本数据类型都引入了对应的 包装类型，
int 的包装类就是 Integer，从 Java5 开始引入了自动装箱/拆箱机制，
使得二 者可以相互转换。 Java 为每个原始类型提供了包装类型： 
原始类型: boolean，char，byte，short，int，long，float，double 
包装类型：Boolean，Character，Byte，Short，Integer，Long，Float，Double
自动装箱：基本数据类型自动转换为包装类型 
自动拆箱：包装类型自动转换为基本数据类型

1、hashCode()方法的作用是获取对象的哈希值，获取对象每个属性的哈希值，最终返回 对象的哈希值；
 2、equals()方法默认比较的是两个对象的地址值，而一般使用需要进行重写，比较对象每 个属性的 hash 值是否一 致，
若完全两个对象的每个属性的 hash 值都相同则认为是同一个对象，若有一个属性不 一致则认为两个对象不相 同。 
一般来说 hashCode 相同的两个对象不见得是同一个对象，有可能发生哈希碰撞现象， 需要重写 hashCode()方法，
在方法中，每次计算 hash 值时。 两个对象的 hashCode() 相同，equals() 不一定 true。
 hashCode()只是计算对象属性的哈希值，有可能属性不一致，但是刚好哈希值一样，发生 哈希碰撞，

length（）：求字符串的长度
 indexOf（）：求某个字符在字符串中的位置 
charAt（）：求一个字符串中某个位置的值 
equals（）：比较两个字符串是否相同
 replace（）：将字符串中的某些字符用别的字符替换掉
 split（）:根据给定正则表达式的匹配拆分此字符串
 substring（）：输出一个新的字符串，它是此字符串中的子串；
 trim（）：将字符串开头的空白和尾部的空白去掉。 
format（）:使用指定的语言环境、格式字符串和参数返回一个格式化字符串。
 getBytes():获取字符串字节数组

hashCode():计算对象成员的哈希值 
equals()：判断对象是否相等 
clone()：对对象进行 clone
 getClass()：获取对象的 Class 字节码文件对象
 wait()：线程阻塞，线程挂起等待 
notify(),notifyAll()：线程唤醒，线程就绪，继续运行
 toString()：获取对象的信息，一般重写，默认返回地址值


